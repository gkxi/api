// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v5.27.1
// source: base/types.proto

package base

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/go-kratos/kratos/v2/errors"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ChainType int32

const (
	ChainType_TypeBitcoin               ChainType = 0
	ChainType_TypeTestnet               ChainType = 1
	ChainType_TypeLitecoin              ChainType = 2
	ChainType_TypeDogecoin              ChainType = 3
	ChainType_TypeReddcoin              ChainType = 4
	ChainType_TypeDash                  ChainType = 5
	ChainType_TypePeercoin              ChainType = 6
	ChainType_TypeNamecoin              ChainType = 7
	ChainType_TypeFeathercoin           ChainType = 8
	ChainType_TypeCounterparty          ChainType = 9
	ChainType_TypeBlackcoin             ChainType = 10
	ChainType_TypeNuShares              ChainType = 11
	ChainType_TypeNuBits                ChainType = 12
	ChainType_TypeMazacoin              ChainType = 13
	ChainType_TypeViacoin               ChainType = 14
	ChainType_TypeClearingHouse         ChainType = 15
	ChainType_TypeRubycoin              ChainType = 16
	ChainType_TypeGroestlcoin           ChainType = 17
	ChainType_TypeDigitalcoin           ChainType = 18
	ChainType_TypeCannacoin             ChainType = 19
	ChainType_TypeDigiByte              ChainType = 20
	ChainType_TypeOpenAssets            ChainType = 21
	ChainType_TypeMonacoin              ChainType = 22
	ChainType_TypeClams                 ChainType = 23
	ChainType_TypePrimecoin             ChainType = 24
	ChainType_TypeNeoscoin              ChainType = 25
	ChainType_TypeJumbucks              ChainType = 26
	ChainType_TypeziftrCOIN             ChainType = 27
	ChainType_TypeVertcoin              ChainType = 28
	ChainType_TypeNXT                   ChainType = 29
	ChainType_TypeBurst                 ChainType = 30
	ChainType_TypeMonetaryUnit          ChainType = 31
	ChainType_TypeZoom                  ChainType = 32
	ChainType_TypeVpncoin               ChainType = 33
	ChainType_TypeCanadaeCoin           ChainType = 34
	ChainType_TypeShadowCash            ChainType = 35
	ChainType_TypeParkByte              ChainType = 36
	ChainType_TypePandacoin             ChainType = 37
	ChainType_TypeStartCOIN             ChainType = 38
	ChainType_TypeMOIN                  ChainType = 39
	ChainType_TypeArgentum              ChainType = 45
	ChainType_TypeGlobalCurrencyReserve ChainType = 49
	ChainType_TypeNovacoin              ChainType = 50
	ChainType_TypeAsiacoin              ChainType = 51
	ChainType_TypeBitcoindark           ChainType = 52
	ChainType_TypeDopecoin              ChainType = 53
	ChainType_TypeTemplecoin            ChainType = 54
	ChainType_TypeAIB                   ChainType = 55
	ChainType_TypeEDRCoin               ChainType = 56
	ChainType_TypeSyscoin               ChainType = 57
	ChainType_TypeSolarcoin             ChainType = 58
	ChainType_TypeSmileycoin            ChainType = 59
	ChainType_TypeEther                 ChainType = 60
	ChainType_TypeEtherClassic          ChainType = 61
	ChainType_TypeOpenChain             ChainType = 62
	ChainType_TypeOKCash                ChainType = 69
	ChainType_TypeDogecoinDark          ChainType = 77
	ChainType_TypeElectronicGulden      ChainType = 78
	ChainType_TypeClubCoin              ChainType = 79
	ChainType_TypeRichCoin              ChainType = 80
	ChainType_TypePotcoin               ChainType = 81
	ChainType_TypeQuarkcoin             ChainType = 82
	ChainType_TypeTerracoin             ChainType = 83
	ChainType_TypeGridcoin              ChainType = 84
	ChainType_TypeAuroracoin            ChainType = 85
	ChainType_TypeIXCoin                ChainType = 86
	ChainType_TypeGulden                ChainType = 87
	ChainType_TypeBitBean               ChainType = 88
	ChainType_TypeBata                  ChainType = 89
	ChainType_TypeMyriadcoin            ChainType = 90
	ChainType_TypeBitSend               ChainType = 91
	ChainType_TypeUnobtanium            ChainType = 92
	ChainType_TypeMasterTrader          ChainType = 93
	ChainType_TypeGoldBlocks            ChainType = 94
	ChainType_TypeSaham                 ChainType = 95
	ChainType_TypeChronos               ChainType = 96
	ChainType_TypeUbiquoin              ChainType = 97
	ChainType_TypeEvotion               ChainType = 98
	ChainType_TypeSaveTheOcean          ChainType = 99
	ChainType_TypeBigUp                 ChainType = 100
	ChainType_TypeGameCredits           ChainType = 101
	ChainType_TypeDollarcoins           ChainType = 102
	ChainType_TypeZayedcoin             ChainType = 103
	ChainType_TypeDubaicoin             ChainType = 104
	ChainType_TypeStratis               ChainType = 105
	ChainType_TypeShilling              ChainType = 106
	ChainType_TypePiggyCoin             ChainType = 118
	ChainType_TypeMonero                ChainType = 128
	ChainType_TypeNavCoin               ChainType = 130
	ChainType_TypeFactomFactoids        ChainType = 131
	ChainType_TypeFactomEntryCredits    ChainType = 132
	ChainType_TypeZcash                 ChainType = 133
	ChainType_TypeLisk                  ChainType = 134
	ChainType_TypeFactomIdentity        ChainType = 135
	ChainType_TypeRipple                ChainType = 144
	ChainType_TypeBitcoinCash           ChainType = 145
	ChainType_TypeSolana                ChainType = 501
	ChainType_TypeMatic                 ChainType = 966
)

// Enum value maps for ChainType.
var (
	ChainType_name = map[int32]string{
		0:   "TypeBitcoin",
		1:   "TypeTestnet",
		2:   "TypeLitecoin",
		3:   "TypeDogecoin",
		4:   "TypeReddcoin",
		5:   "TypeDash",
		6:   "TypePeercoin",
		7:   "TypeNamecoin",
		8:   "TypeFeathercoin",
		9:   "TypeCounterparty",
		10:  "TypeBlackcoin",
		11:  "TypeNuShares",
		12:  "TypeNuBits",
		13:  "TypeMazacoin",
		14:  "TypeViacoin",
		15:  "TypeClearingHouse",
		16:  "TypeRubycoin",
		17:  "TypeGroestlcoin",
		18:  "TypeDigitalcoin",
		19:  "TypeCannacoin",
		20:  "TypeDigiByte",
		21:  "TypeOpenAssets",
		22:  "TypeMonacoin",
		23:  "TypeClams",
		24:  "TypePrimecoin",
		25:  "TypeNeoscoin",
		26:  "TypeJumbucks",
		27:  "TypeziftrCOIN",
		28:  "TypeVertcoin",
		29:  "TypeNXT",
		30:  "TypeBurst",
		31:  "TypeMonetaryUnit",
		32:  "TypeZoom",
		33:  "TypeVpncoin",
		34:  "TypeCanadaeCoin",
		35:  "TypeShadowCash",
		36:  "TypeParkByte",
		37:  "TypePandacoin",
		38:  "TypeStartCOIN",
		39:  "TypeMOIN",
		45:  "TypeArgentum",
		49:  "TypeGlobalCurrencyReserve",
		50:  "TypeNovacoin",
		51:  "TypeAsiacoin",
		52:  "TypeBitcoindark",
		53:  "TypeDopecoin",
		54:  "TypeTemplecoin",
		55:  "TypeAIB",
		56:  "TypeEDRCoin",
		57:  "TypeSyscoin",
		58:  "TypeSolarcoin",
		59:  "TypeSmileycoin",
		60:  "TypeEther",
		61:  "TypeEtherClassic",
		62:  "TypeOpenChain",
		69:  "TypeOKCash",
		77:  "TypeDogecoinDark",
		78:  "TypeElectronicGulden",
		79:  "TypeClubCoin",
		80:  "TypeRichCoin",
		81:  "TypePotcoin",
		82:  "TypeQuarkcoin",
		83:  "TypeTerracoin",
		84:  "TypeGridcoin",
		85:  "TypeAuroracoin",
		86:  "TypeIXCoin",
		87:  "TypeGulden",
		88:  "TypeBitBean",
		89:  "TypeBata",
		90:  "TypeMyriadcoin",
		91:  "TypeBitSend",
		92:  "TypeUnobtanium",
		93:  "TypeMasterTrader",
		94:  "TypeGoldBlocks",
		95:  "TypeSaham",
		96:  "TypeChronos",
		97:  "TypeUbiquoin",
		98:  "TypeEvotion",
		99:  "TypeSaveTheOcean",
		100: "TypeBigUp",
		101: "TypeGameCredits",
		102: "TypeDollarcoins",
		103: "TypeZayedcoin",
		104: "TypeDubaicoin",
		105: "TypeStratis",
		106: "TypeShilling",
		118: "TypePiggyCoin",
		128: "TypeMonero",
		130: "TypeNavCoin",
		131: "TypeFactomFactoids",
		132: "TypeFactomEntryCredits",
		133: "TypeZcash",
		134: "TypeLisk",
		135: "TypeFactomIdentity",
		144: "TypeRipple",
		145: "TypeBitcoinCash",
		501: "TypeSolana",
		966: "TypeMatic",
	}
	ChainType_value = map[string]int32{
		"TypeBitcoin":               0,
		"TypeTestnet":               1,
		"TypeLitecoin":              2,
		"TypeDogecoin":              3,
		"TypeReddcoin":              4,
		"TypeDash":                  5,
		"TypePeercoin":              6,
		"TypeNamecoin":              7,
		"TypeFeathercoin":           8,
		"TypeCounterparty":          9,
		"TypeBlackcoin":             10,
		"TypeNuShares":              11,
		"TypeNuBits":                12,
		"TypeMazacoin":              13,
		"TypeViacoin":               14,
		"TypeClearingHouse":         15,
		"TypeRubycoin":              16,
		"TypeGroestlcoin":           17,
		"TypeDigitalcoin":           18,
		"TypeCannacoin":             19,
		"TypeDigiByte":              20,
		"TypeOpenAssets":            21,
		"TypeMonacoin":              22,
		"TypeClams":                 23,
		"TypePrimecoin":             24,
		"TypeNeoscoin":              25,
		"TypeJumbucks":              26,
		"TypeziftrCOIN":             27,
		"TypeVertcoin":              28,
		"TypeNXT":                   29,
		"TypeBurst":                 30,
		"TypeMonetaryUnit":          31,
		"TypeZoom":                  32,
		"TypeVpncoin":               33,
		"TypeCanadaeCoin":           34,
		"TypeShadowCash":            35,
		"TypeParkByte":              36,
		"TypePandacoin":             37,
		"TypeStartCOIN":             38,
		"TypeMOIN":                  39,
		"TypeArgentum":              45,
		"TypeGlobalCurrencyReserve": 49,
		"TypeNovacoin":              50,
		"TypeAsiacoin":              51,
		"TypeBitcoindark":           52,
		"TypeDopecoin":              53,
		"TypeTemplecoin":            54,
		"TypeAIB":                   55,
		"TypeEDRCoin":               56,
		"TypeSyscoin":               57,
		"TypeSolarcoin":             58,
		"TypeSmileycoin":            59,
		"TypeEther":                 60,
		"TypeEtherClassic":          61,
		"TypeOpenChain":             62,
		"TypeOKCash":                69,
		"TypeDogecoinDark":          77,
		"TypeElectronicGulden":      78,
		"TypeClubCoin":              79,
		"TypeRichCoin":              80,
		"TypePotcoin":               81,
		"TypeQuarkcoin":             82,
		"TypeTerracoin":             83,
		"TypeGridcoin":              84,
		"TypeAuroracoin":            85,
		"TypeIXCoin":                86,
		"TypeGulden":                87,
		"TypeBitBean":               88,
		"TypeBata":                  89,
		"TypeMyriadcoin":            90,
		"TypeBitSend":               91,
		"TypeUnobtanium":            92,
		"TypeMasterTrader":          93,
		"TypeGoldBlocks":            94,
		"TypeSaham":                 95,
		"TypeChronos":               96,
		"TypeUbiquoin":              97,
		"TypeEvotion":               98,
		"TypeSaveTheOcean":          99,
		"TypeBigUp":                 100,
		"TypeGameCredits":           101,
		"TypeDollarcoins":           102,
		"TypeZayedcoin":             103,
		"TypeDubaicoin":             104,
		"TypeStratis":               105,
		"TypeShilling":              106,
		"TypePiggyCoin":             118,
		"TypeMonero":                128,
		"TypeNavCoin":               130,
		"TypeFactomFactoids":        131,
		"TypeFactomEntryCredits":    132,
		"TypeZcash":                 133,
		"TypeLisk":                  134,
		"TypeFactomIdentity":        135,
		"TypeRipple":                144,
		"TypeBitcoinCash":           145,
		"TypeSolana":                501,
		"TypeMatic":                 966,
	}
)

func (x ChainType) Enum() *ChainType {
	p := new(ChainType)
	*p = x
	return p
}

func (x ChainType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChainType) Descriptor() protoreflect.EnumDescriptor {
	return file_base_types_proto_enumTypes[0].Descriptor()
}

func (ChainType) Type() protoreflect.EnumType {
	return &file_base_types_proto_enumTypes[0]
}

func (x ChainType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChainType.Descriptor instead.
func (ChainType) EnumDescriptor() ([]byte, []int) {
	return file_base_types_proto_rawDescGZIP(), []int{0}
}

var File_base_types_proto protoreflect.FileDescriptor

var file_base_types_proto_rawDesc = []byte{
	0x0a, 0x10, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x04, 0x62, 0x61, 0x73, 0x65, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65,
	0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x13, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2a, 0xa9, 0x0e, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x79, 0x70, 0x65, 0x42, 0x69, 0x74, 0x63, 0x6f,
	0x69, 0x6e, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x79, 0x70, 0x65, 0x54, 0x65, 0x73, 0x74,
	0x6e, 0x65, 0x74, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x74,
	0x65, 0x63, 0x6f, 0x69, 0x6e, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x79, 0x70, 0x65, 0x44,
	0x6f, 0x67, 0x65, 0x63, 0x6f, 0x69, 0x6e, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x65, 0x64, 0x64, 0x63, 0x6f, 0x69, 0x6e, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x54,
	0x79, 0x70, 0x65, 0x44, 0x61, 0x73, 0x68, 0x10, 0x05, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x79, 0x70,
	0x65, 0x50, 0x65, 0x65, 0x72, 0x63, 0x6f, 0x69, 0x6e, 0x10, 0x06, 0x12, 0x10, 0x0a, 0x0c, 0x54,
	0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x63, 0x6f, 0x69, 0x6e, 0x10, 0x07, 0x12, 0x13, 0x0a,
	0x0f, 0x54, 0x79, 0x70, 0x65, 0x46, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x63, 0x6f, 0x69, 0x6e,
	0x10, 0x08, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65,
	0x72, 0x70, 0x61, 0x72, 0x74, 0x79, 0x10, 0x09, 0x12, 0x11, 0x0a, 0x0d, 0x54, 0x79, 0x70, 0x65,
	0x42, 0x6c, 0x61, 0x63, 0x6b, 0x63, 0x6f, 0x69, 0x6e, 0x10, 0x0a, 0x12, 0x10, 0x0a, 0x0c, 0x54,
	0x79, 0x70, 0x65, 0x4e, 0x75, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73, 0x10, 0x0b, 0x12, 0x0e, 0x0a,
	0x0a, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x75, 0x42, 0x69, 0x74, 0x73, 0x10, 0x0c, 0x12, 0x10, 0x0a,
	0x0c, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x61, 0x7a, 0x61, 0x63, 0x6f, 0x69, 0x6e, 0x10, 0x0d, 0x12,
	0x0f, 0x0a, 0x0b, 0x54, 0x79, 0x70, 0x65, 0x56, 0x69, 0x61, 0x63, 0x6f, 0x69, 0x6e, 0x10, 0x0e,
	0x12, 0x15, 0x0a, 0x11, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x69, 0x6e, 0x67,
	0x48, 0x6f, 0x75, 0x73, 0x65, 0x10, 0x0f, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x75, 0x62, 0x79, 0x63, 0x6f, 0x69, 0x6e, 0x10, 0x10, 0x12, 0x13, 0x0a, 0x0f, 0x54, 0x79, 0x70,
	0x65, 0x47, 0x72, 0x6f, 0x65, 0x73, 0x74, 0x6c, 0x63, 0x6f, 0x69, 0x6e, 0x10, 0x11, 0x12, 0x13,
	0x0a, 0x0f, 0x54, 0x79, 0x70, 0x65, 0x44, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x63, 0x6f, 0x69,
	0x6e, 0x10, 0x12, 0x12, 0x11, 0x0a, 0x0d, 0x54, 0x79, 0x70, 0x65, 0x43, 0x61, 0x6e, 0x6e, 0x61,
	0x63, 0x6f, 0x69, 0x6e, 0x10, 0x13, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x79, 0x70, 0x65, 0x44, 0x69,
	0x67, 0x69, 0x42, 0x79, 0x74, 0x65, 0x10, 0x14, 0x12, 0x12, 0x0a, 0x0e, 0x54, 0x79, 0x70, 0x65,
	0x4f, 0x70, 0x65, 0x6e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x10, 0x15, 0x12, 0x10, 0x0a, 0x0c,
	0x54, 0x79, 0x70, 0x65, 0x4d, 0x6f, 0x6e, 0x61, 0x63, 0x6f, 0x69, 0x6e, 0x10, 0x16, 0x12, 0x0d,
	0x0a, 0x09, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6c, 0x61, 0x6d, 0x73, 0x10, 0x17, 0x12, 0x11, 0x0a,
	0x0d, 0x54, 0x79, 0x70, 0x65, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x63, 0x6f, 0x69, 0x6e, 0x10, 0x18,
	0x12, 0x10, 0x0a, 0x0c, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x65, 0x6f, 0x73, 0x63, 0x6f, 0x69, 0x6e,
	0x10, 0x19, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x79, 0x70, 0x65, 0x4a, 0x75, 0x6d, 0x62, 0x75, 0x63,
	0x6b, 0x73, 0x10, 0x1a, 0x12, 0x11, 0x0a, 0x0d, 0x54, 0x79, 0x70, 0x65, 0x7a, 0x69, 0x66, 0x74,
	0x72, 0x43, 0x4f, 0x49, 0x4e, 0x10, 0x1b, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x79, 0x70, 0x65, 0x56,
	0x65, 0x72, 0x74, 0x63, 0x6f, 0x69, 0x6e, 0x10, 0x1c, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x79, 0x70,
	0x65, 0x4e, 0x58, 0x54, 0x10, 0x1d, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x79, 0x70, 0x65, 0x42, 0x75,
	0x72, 0x73, 0x74, 0x10, 0x1e, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x6f, 0x6e,
	0x65, 0x74, 0x61, 0x72, 0x79, 0x55, 0x6e, 0x69, 0x74, 0x10, 0x1f, 0x12, 0x0c, 0x0a, 0x08, 0x54,
	0x79, 0x70, 0x65, 0x5a, 0x6f, 0x6f, 0x6d, 0x10, 0x20, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x79, 0x70,
	0x65, 0x56, 0x70, 0x6e, 0x63, 0x6f, 0x69, 0x6e, 0x10, 0x21, 0x12, 0x13, 0x0a, 0x0f, 0x54, 0x79,
	0x70, 0x65, 0x43, 0x61, 0x6e, 0x61, 0x64, 0x61, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x10, 0x22, 0x12,
	0x12, 0x0a, 0x0e, 0x54, 0x79, 0x70, 0x65, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x43, 0x61, 0x73,
	0x68, 0x10, 0x23, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x79, 0x70, 0x65, 0x50, 0x61, 0x72, 0x6b, 0x42,
	0x79, 0x74, 0x65, 0x10, 0x24, 0x12, 0x11, 0x0a, 0x0d, 0x54, 0x79, 0x70, 0x65, 0x50, 0x61, 0x6e,
	0x64, 0x61, 0x63, 0x6f, 0x69, 0x6e, 0x10, 0x25, 0x12, 0x11, 0x0a, 0x0d, 0x54, 0x79, 0x70, 0x65,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x43, 0x4f, 0x49, 0x4e, 0x10, 0x26, 0x12, 0x0c, 0x0a, 0x08, 0x54,
	0x79, 0x70, 0x65, 0x4d, 0x4f, 0x49, 0x4e, 0x10, 0x27, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x79, 0x70,
	0x65, 0x41, 0x72, 0x67, 0x65, 0x6e, 0x74, 0x75, 0x6d, 0x10, 0x2d, 0x12, 0x1d, 0x0a, 0x19, 0x54,
	0x79, 0x70, 0x65, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x10, 0x31, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x79,
	0x70, 0x65, 0x4e, 0x6f, 0x76, 0x61, 0x63, 0x6f, 0x69, 0x6e, 0x10, 0x32, 0x12, 0x10, 0x0a, 0x0c,
	0x54, 0x79, 0x70, 0x65, 0x41, 0x73, 0x69, 0x61, 0x63, 0x6f, 0x69, 0x6e, 0x10, 0x33, 0x12, 0x13,
	0x0a, 0x0f, 0x54, 0x79, 0x70, 0x65, 0x42, 0x69, 0x74, 0x63, 0x6f, 0x69, 0x6e, 0x64, 0x61, 0x72,
	0x6b, 0x10, 0x34, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x79, 0x70, 0x65, 0x44, 0x6f, 0x70, 0x65, 0x63,
	0x6f, 0x69, 0x6e, 0x10, 0x35, 0x12, 0x12, 0x0a, 0x0e, 0x54, 0x79, 0x70, 0x65, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x65, 0x63, 0x6f, 0x69, 0x6e, 0x10, 0x36, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x79, 0x70,
	0x65, 0x41, 0x49, 0x42, 0x10, 0x37, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x79, 0x70, 0x65, 0x45, 0x44,
	0x52, 0x43, 0x6f, 0x69, 0x6e, 0x10, 0x38, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x79, 0x70, 0x65, 0x53,
	0x79, 0x73, 0x63, 0x6f, 0x69, 0x6e, 0x10, 0x39, 0x12, 0x11, 0x0a, 0x0d, 0x54, 0x79, 0x70, 0x65,
	0x53, 0x6f, 0x6c, 0x61, 0x72, 0x63, 0x6f, 0x69, 0x6e, 0x10, 0x3a, 0x12, 0x12, 0x0a, 0x0e, 0x54,
	0x79, 0x70, 0x65, 0x53, 0x6d, 0x69, 0x6c, 0x65, 0x79, 0x63, 0x6f, 0x69, 0x6e, 0x10, 0x3b, 0x12,
	0x0d, 0x0a, 0x09, 0x54, 0x79, 0x70, 0x65, 0x45, 0x74, 0x68, 0x65, 0x72, 0x10, 0x3c, 0x12, 0x14,
	0x0a, 0x10, 0x54, 0x79, 0x70, 0x65, 0x45, 0x74, 0x68, 0x65, 0x72, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x69, 0x63, 0x10, 0x3d, 0x12, 0x11, 0x0a, 0x0d, 0x54, 0x79, 0x70, 0x65, 0x4f, 0x70, 0x65, 0x6e,
	0x43, 0x68, 0x61, 0x69, 0x6e, 0x10, 0x3e, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x79, 0x70, 0x65, 0x4f,
	0x4b, 0x43, 0x61, 0x73, 0x68, 0x10, 0x45, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x79, 0x70, 0x65, 0x44,
	0x6f, 0x67, 0x65, 0x63, 0x6f, 0x69, 0x6e, 0x44, 0x61, 0x72, 0x6b, 0x10, 0x4d, 0x12, 0x18, 0x0a,
	0x14, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x6f, 0x6e, 0x69, 0x63, 0x47,
	0x75, 0x6c, 0x64, 0x65, 0x6e, 0x10, 0x4e, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x79, 0x70, 0x65, 0x43,
	0x6c, 0x75, 0x62, 0x43, 0x6f, 0x69, 0x6e, 0x10, 0x4f, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x69, 0x63, 0x68, 0x43, 0x6f, 0x69, 0x6e, 0x10, 0x50, 0x12, 0x0f, 0x0a, 0x0b, 0x54,
	0x79, 0x70, 0x65, 0x50, 0x6f, 0x74, 0x63, 0x6f, 0x69, 0x6e, 0x10, 0x51, 0x12, 0x11, 0x0a, 0x0d,
	0x54, 0x79, 0x70, 0x65, 0x51, 0x75, 0x61, 0x72, 0x6b, 0x63, 0x6f, 0x69, 0x6e, 0x10, 0x52, 0x12,
	0x11, 0x0a, 0x0d, 0x54, 0x79, 0x70, 0x65, 0x54, 0x65, 0x72, 0x72, 0x61, 0x63, 0x6f, 0x69, 0x6e,
	0x10, 0x53, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x79, 0x70, 0x65, 0x47, 0x72, 0x69, 0x64, 0x63, 0x6f,
	0x69, 0x6e, 0x10, 0x54, 0x12, 0x12, 0x0a, 0x0e, 0x54, 0x79, 0x70, 0x65, 0x41, 0x75, 0x72, 0x6f,
	0x72, 0x61, 0x63, 0x6f, 0x69, 0x6e, 0x10, 0x55, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x79, 0x70, 0x65,
	0x49, 0x58, 0x43, 0x6f, 0x69, 0x6e, 0x10, 0x56, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x79, 0x70, 0x65,
	0x47, 0x75, 0x6c, 0x64, 0x65, 0x6e, 0x10, 0x57, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x79, 0x70, 0x65,
	0x42, 0x69, 0x74, 0x42, 0x65, 0x61, 0x6e, 0x10, 0x58, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x79, 0x70,
	0x65, 0x42, 0x61, 0x74, 0x61, 0x10, 0x59, 0x12, 0x12, 0x0a, 0x0e, 0x54, 0x79, 0x70, 0x65, 0x4d,
	0x79, 0x72, 0x69, 0x61, 0x64, 0x63, 0x6f, 0x69, 0x6e, 0x10, 0x5a, 0x12, 0x0f, 0x0a, 0x0b, 0x54,
	0x79, 0x70, 0x65, 0x42, 0x69, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x10, 0x5b, 0x12, 0x12, 0x0a, 0x0e,
	0x54, 0x79, 0x70, 0x65, 0x55, 0x6e, 0x6f, 0x62, 0x74, 0x61, 0x6e, 0x69, 0x75, 0x6d, 0x10, 0x5c,
	0x12, 0x14, 0x0a, 0x10, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x54, 0x72,
	0x61, 0x64, 0x65, 0x72, 0x10, 0x5d, 0x12, 0x12, 0x0a, 0x0e, 0x54, 0x79, 0x70, 0x65, 0x47, 0x6f,
	0x6c, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x10, 0x5e, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x79,
	0x70, 0x65, 0x53, 0x61, 0x68, 0x61, 0x6d, 0x10, 0x5f, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x79, 0x70,
	0x65, 0x43, 0x68, 0x72, 0x6f, 0x6e, 0x6f, 0x73, 0x10, 0x60, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x79,
	0x70, 0x65, 0x55, 0x62, 0x69, 0x71, 0x75, 0x6f, 0x69, 0x6e, 0x10, 0x61, 0x12, 0x0f, 0x0a, 0x0b,
	0x54, 0x79, 0x70, 0x65, 0x45, 0x76, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x62, 0x12, 0x14, 0x0a,
	0x10, 0x54, 0x79, 0x70, 0x65, 0x53, 0x61, 0x76, 0x65, 0x54, 0x68, 0x65, 0x4f, 0x63, 0x65, 0x61,
	0x6e, 0x10, 0x63, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x79, 0x70, 0x65, 0x42, 0x69, 0x67, 0x55, 0x70,
	0x10, 0x64, 0x12, 0x13, 0x0a, 0x0f, 0x54, 0x79, 0x70, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x72,
	0x65, 0x64, 0x69, 0x74, 0x73, 0x10, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x54, 0x79, 0x70, 0x65, 0x44,
	0x6f, 0x6c, 0x6c, 0x61, 0x72, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0x10, 0x66, 0x12, 0x11, 0x0a, 0x0d,
	0x54, 0x79, 0x70, 0x65, 0x5a, 0x61, 0x79, 0x65, 0x64, 0x63, 0x6f, 0x69, 0x6e, 0x10, 0x67, 0x12,
	0x11, 0x0a, 0x0d, 0x54, 0x79, 0x70, 0x65, 0x44, 0x75, 0x62, 0x61, 0x69, 0x63, 0x6f, 0x69, 0x6e,
	0x10, 0x68, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x79, 0x70, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x69,
	0x73, 0x10, 0x69, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x79, 0x70, 0x65, 0x53, 0x68, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x10, 0x6a, 0x12, 0x11, 0x0a, 0x0d, 0x54, 0x79, 0x70, 0x65, 0x50, 0x69, 0x67,
	0x67, 0x79, 0x43, 0x6f, 0x69, 0x6e, 0x10, 0x76, 0x12, 0x0f, 0x0a, 0x0a, 0x54, 0x79, 0x70, 0x65,
	0x4d, 0x6f, 0x6e, 0x65, 0x72, 0x6f, 0x10, 0x80, 0x01, 0x12, 0x10, 0x0a, 0x0b, 0x54, 0x79, 0x70,
	0x65, 0x4e, 0x61, 0x76, 0x43, 0x6f, 0x69, 0x6e, 0x10, 0x82, 0x01, 0x12, 0x17, 0x0a, 0x12, 0x54,
	0x79, 0x70, 0x65, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x6d, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x69, 0x64,
	0x73, 0x10, 0x83, 0x01, 0x12, 0x1b, 0x0a, 0x16, 0x54, 0x79, 0x70, 0x65, 0x46, 0x61, 0x63, 0x74,
	0x6f, 0x6d, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x73, 0x10, 0x84,
	0x01, 0x12, 0x0e, 0x0a, 0x09, 0x54, 0x79, 0x70, 0x65, 0x5a, 0x63, 0x61, 0x73, 0x68, 0x10, 0x85,
	0x01, 0x12, 0x0d, 0x0a, 0x08, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x73, 0x6b, 0x10, 0x86, 0x01,
	0x12, 0x17, 0x0a, 0x12, 0x54, 0x79, 0x70, 0x65, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x6d, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x10, 0x87, 0x01, 0x12, 0x0f, 0x0a, 0x0a, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x69, 0x70, 0x70, 0x6c, 0x65, 0x10, 0x90, 0x01, 0x12, 0x14, 0x0a, 0x0f, 0x54, 0x79,
	0x70, 0x65, 0x42, 0x69, 0x74, 0x63, 0x6f, 0x69, 0x6e, 0x43, 0x61, 0x73, 0x68, 0x10, 0x91, 0x01,
	0x12, 0x0f, 0x0a, 0x0a, 0x54, 0x79, 0x70, 0x65, 0x53, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x10, 0xf5,
	0x03, 0x12, 0x0e, 0x0a, 0x09, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x61, 0x74, 0x69, 0x63, 0x10, 0xc6,
	0x07, 0x42, 0x1f, 0x5a, 0x1d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x67, 0x6b, 0x78, 0x69, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x3b, 0x62, 0x61,
	0x73, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_base_types_proto_rawDescOnce sync.Once
	file_base_types_proto_rawDescData = file_base_types_proto_rawDesc
)

func file_base_types_proto_rawDescGZIP() []byte {
	file_base_types_proto_rawDescOnce.Do(func() {
		file_base_types_proto_rawDescData = protoimpl.X.CompressGZIP(file_base_types_proto_rawDescData)
	})
	return file_base_types_proto_rawDescData
}

var file_base_types_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_base_types_proto_goTypes = []interface{}{
	(ChainType)(0), // 0: base.ChainType
}
var file_base_types_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_base_types_proto_init() }
func file_base_types_proto_init() {
	if File_base_types_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_base_types_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_base_types_proto_goTypes,
		DependencyIndexes: file_base_types_proto_depIdxs,
		EnumInfos:         file_base_types_proto_enumTypes,
	}.Build()
	File_base_types_proto = out.File
	file_base_types_proto_rawDesc = nil
	file_base_types_proto_goTypes = nil
	file_base_types_proto_depIdxs = nil
}
