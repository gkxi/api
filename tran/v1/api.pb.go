// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.12
// source: tran/v1/api.proto

package v1

import (
	_ "github.com/gkxi/api/base"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/go-kratos/kratos/v2/errors"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ChainListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainCode string `protobuf:"bytes,1,opt,name=chainCode,proto3" json:"chainCode,omitempty"`
}

func (x *ChainListRequest) Reset() {
	*x = ChainListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tran_v1_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChainListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChainListRequest) ProtoMessage() {}

func (x *ChainListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tran_v1_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChainListRequest.ProtoReflect.Descriptor instead.
func (*ChainListRequest) Descriptor() ([]byte, []int) {
	return file_tran_v1_api_proto_rawDescGZIP(), []int{0}
}

func (x *ChainListRequest) GetChainCode() string {
	if x != nil {
		return x.ChainCode
	}
	return ""
}

type ChainListResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainCode       string `protobuf:"bytes,1,opt,name=chainCode,proto3" json:"chainCode,omitempty"`
	Code            string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	ContractAddress string `protobuf:"bytes,3,opt,name=contractAddress,proto3" json:"contractAddress,omitempty"`
}

func (x *ChainListResult) Reset() {
	*x = ChainListResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tran_v1_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChainListResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChainListResult) ProtoMessage() {}

func (x *ChainListResult) ProtoReflect() protoreflect.Message {
	mi := &file_tran_v1_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChainListResult.ProtoReflect.Descriptor instead.
func (*ChainListResult) Descriptor() ([]byte, []int) {
	return file_tran_v1_api_proto_rawDescGZIP(), []int{1}
}

func (x *ChainListResult) GetChainCode() string {
	if x != nil {
		return x.ChainCode
	}
	return ""
}

func (x *ChainListResult) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ChainListResult) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

type ChainListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool               `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Code    string             `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string             `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*ChainListResult `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ChainListReply) Reset() {
	*x = ChainListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tran_v1_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChainListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChainListReply) ProtoMessage() {}

func (x *ChainListReply) ProtoReflect() protoreflect.Message {
	mi := &file_tran_v1_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChainListReply.ProtoReflect.Descriptor instead.
func (*ChainListReply) Descriptor() ([]byte, []int) {
	return file_tran_v1_api_proto_rawDescGZIP(), []int{2}
}

func (x *ChainListReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ChainListReply) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ChainListReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ChainListReply) GetData() []*ChainListResult {
	if x != nil {
		return x.Data
	}
	return nil
}

type HeightRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HeightRequest) Reset() {
	*x = HeightRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tran_v1_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeightRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeightRequest) ProtoMessage() {}

func (x *HeightRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tran_v1_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeightRequest.ProtoReflect.Descriptor instead.
func (*HeightRequest) Descriptor() ([]byte, []int) {
	return file_tran_v1_api_proto_rawDescGZIP(), []int{3}
}

type HeightReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Code    string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    uint64 `protobuf:"varint,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *HeightReply) Reset() {
	*x = HeightReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tran_v1_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeightReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeightReply) ProtoMessage() {}

func (x *HeightReply) ProtoReflect() protoreflect.Message {
	mi := &file_tran_v1_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeightReply.ProtoReflect.Descriptor instead.
func (*HeightReply) Descriptor() ([]byte, []int) {
	return file_tran_v1_api_proto_rawDescGZIP(), []int{4}
}

func (x *HeightReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *HeightReply) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *HeightReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *HeightReply) GetData() uint64 {
	if x != nil {
		return x.Data
	}
	return 0
}

type IsMultiSigAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WalletAddress string `protobuf:"bytes,1,opt,name=walletAddress,proto3" json:"walletAddress,omitempty"`
}

func (x *IsMultiSigAddressRequest) Reset() {
	*x = IsMultiSigAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tran_v1_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsMultiSigAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsMultiSigAddressRequest) ProtoMessage() {}

func (x *IsMultiSigAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tran_v1_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsMultiSigAddressRequest.ProtoReflect.Descriptor instead.
func (*IsMultiSigAddressRequest) Descriptor() ([]byte, []int) {
	return file_tran_v1_api_proto_rawDescGZIP(), []int{5}
}

func (x *IsMultiSigAddressRequest) GetWalletAddress() string {
	if x != nil {
		return x.WalletAddress
	}
	return ""
}

type IsMultiSigAddressReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Code    string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    bool   `protobuf:"varint,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *IsMultiSigAddressReply) Reset() {
	*x = IsMultiSigAddressReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tran_v1_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsMultiSigAddressReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsMultiSigAddressReply) ProtoMessage() {}

func (x *IsMultiSigAddressReply) ProtoReflect() protoreflect.Message {
	mi := &file_tran_v1_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsMultiSigAddressReply.ProtoReflect.Descriptor instead.
func (*IsMultiSigAddressReply) Descriptor() ([]byte, []int) {
	return file_tran_v1_api_proto_rawDescGZIP(), []int{6}
}

func (x *IsMultiSigAddressReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *IsMultiSigAddressReply) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *IsMultiSigAddressReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *IsMultiSigAddressReply) GetData() bool {
	if x != nil {
		return x.Data
	}
	return false
}

type BalanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WalletAddress   string `protobuf:"bytes,1,opt,name=walletAddress,proto3" json:"walletAddress,omitempty"`
	ContractAddress string `protobuf:"bytes,2,opt,name=contractAddress,proto3" json:"contractAddress,omitempty"`
}

func (x *BalanceRequest) Reset() {
	*x = BalanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tran_v1_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalanceRequest) ProtoMessage() {}

func (x *BalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tran_v1_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalanceRequest.ProtoReflect.Descriptor instead.
func (*BalanceRequest) Descriptor() ([]byte, []int) {
	return file_tran_v1_api_proto_rawDescGZIP(), []int{7}
}

func (x *BalanceRequest) GetWalletAddress() string {
	if x != nil {
		return x.WalletAddress
	}
	return ""
}

func (x *BalanceRequest) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

type BalanceResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Balance  string `protobuf:"bytes,1,opt,name=balance,proto3" json:"balance,omitempty"`
	Multisig bool   `protobuf:"varint,2,opt,name=multisig,proto3" json:"multisig,omitempty"`
}

func (x *BalanceResult) Reset() {
	*x = BalanceResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tran_v1_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BalanceResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalanceResult) ProtoMessage() {}

func (x *BalanceResult) ProtoReflect() protoreflect.Message {
	mi := &file_tran_v1_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalanceResult.ProtoReflect.Descriptor instead.
func (*BalanceResult) Descriptor() ([]byte, []int) {
	return file_tran_v1_api_proto_rawDescGZIP(), []int{8}
}

func (x *BalanceResult) GetBalance() string {
	if x != nil {
		return x.Balance
	}
	return ""
}

func (x *BalanceResult) GetMultisig() bool {
	if x != nil {
		return x.Multisig
	}
	return false
}

type BalanceReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool           `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Code    string         `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string         `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *BalanceResult `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *BalanceReply) Reset() {
	*x = BalanceReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tran_v1_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BalanceReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalanceReply) ProtoMessage() {}

func (x *BalanceReply) ProtoReflect() protoreflect.Message {
	mi := &file_tran_v1_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalanceReply.ProtoReflect.Descriptor instead.
func (*BalanceReply) Descriptor() ([]byte, []int) {
	return file_tran_v1_api_proto_rawDescGZIP(), []int{9}
}

func (x *BalanceReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *BalanceReply) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *BalanceReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *BalanceReply) GetData() *BalanceResult {
	if x != nil {
		return x.Data
	}
	return nil
}

type SendTranRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mnemonic        string `protobuf:"bytes,1,opt,name=mnemonic,proto3" json:"mnemonic,omitempty"`
	PrivKey         string `protobuf:"bytes,2,opt,name=privKey,proto3" json:"privKey,omitempty"`
	From            string `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	To              string `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`
	ContractAddress string `protobuf:"bytes,5,opt,name=contractAddress,proto3" json:"contractAddress,omitempty"`
	Value           string `protobuf:"bytes,6,opt,name=value,proto3" json:"value,omitempty"`
	ObjectId        string `protobuf:"bytes,7,opt,name=objectId,proto3" json:"objectId,omitempty"`
}

func (x *SendTranRequest) Reset() {
	*x = SendTranRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tran_v1_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendTranRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendTranRequest) ProtoMessage() {}

func (x *SendTranRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tran_v1_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendTranRequest.ProtoReflect.Descriptor instead.
func (*SendTranRequest) Descriptor() ([]byte, []int) {
	return file_tran_v1_api_proto_rawDescGZIP(), []int{10}
}

func (x *SendTranRequest) GetMnemonic() string {
	if x != nil {
		return x.Mnemonic
	}
	return ""
}

func (x *SendTranRequest) GetPrivKey() string {
	if x != nil {
		return x.PrivKey
	}
	return ""
}

func (x *SendTranRequest) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *SendTranRequest) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *SendTranRequest) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *SendTranRequest) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *SendTranRequest) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

type SendTranResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *SendTranResult) Reset() {
	*x = SendTranResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tran_v1_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendTranResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendTranResult) ProtoMessage() {}

func (x *SendTranResult) ProtoReflect() protoreflect.Message {
	mi := &file_tran_v1_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendTranResult.ProtoReflect.Descriptor instead.
func (*SendTranResult) Descriptor() ([]byte, []int) {
	return file_tran_v1_api_proto_rawDescGZIP(), []int{11}
}

func (x *SendTranResult) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *SendTranResult) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type SendTranReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool            `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Code    string          `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string          `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *SendTranResult `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SendTranReply) Reset() {
	*x = SendTranReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tran_v1_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendTranReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendTranReply) ProtoMessage() {}

func (x *SendTranReply) ProtoReflect() protoreflect.Message {
	mi := &file_tran_v1_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendTranReply.ProtoReflect.Descriptor instead.
func (*SendTranReply) Descriptor() ([]byte, []int) {
	return file_tran_v1_api_proto_rawDescGZIP(), []int{12}
}

func (x *SendTranReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SendTranReply) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *SendTranReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SendTranReply) GetData() *SendTranResult {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetBlockHashByHeightRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height string `protobuf:"bytes,1,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *GetBlockHashByHeightRequest) Reset() {
	*x = GetBlockHashByHeightRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tran_v1_api_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlockHashByHeightRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockHashByHeightRequest) ProtoMessage() {}

func (x *GetBlockHashByHeightRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tran_v1_api_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockHashByHeightRequest.ProtoReflect.Descriptor instead.
func (*GetBlockHashByHeightRequest) Descriptor() ([]byte, []int) {
	return file_tran_v1_api_proto_rawDescGZIP(), []int{13}
}

func (x *GetBlockHashByHeightRequest) GetHeight() string {
	if x != nil {
		return x.Height
	}
	return ""
}

type TxResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash             string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	From             string `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	To               string `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
	TokenTransaction bool   `protobuf:"varint,4,opt,name=tokenTransaction,proto3" json:"tokenTransaction,omitempty"`
	ContractAddress  string `protobuf:"bytes,5,opt,name=contractAddress,proto3" json:"contractAddress,omitempty"`
	Status           bool   `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
	Value            string `protobuf:"bytes,7,opt,name=value,proto3" json:"value,omitempty"`
	Fee              string `protobuf:"bytes,9,opt,name=fee,proto3" json:"fee,omitempty"`
	Date             int64  `protobuf:"varint,10,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *TxResult) Reset() {
	*x = TxResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tran_v1_api_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxResult) ProtoMessage() {}

func (x *TxResult) ProtoReflect() protoreflect.Message {
	mi := &file_tran_v1_api_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxResult.ProtoReflect.Descriptor instead.
func (*TxResult) Descriptor() ([]byte, []int) {
	return file_tran_v1_api_proto_rawDescGZIP(), []int{14}
}

func (x *TxResult) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *TxResult) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *TxResult) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *TxResult) GetTokenTransaction() bool {
	if x != nil {
		return x.TokenTransaction
	}
	return false
}

func (x *TxResult) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *TxResult) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *TxResult) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *TxResult) GetFee() string {
	if x != nil {
		return x.Fee
	}
	return ""
}

func (x *TxResult) GetDate() int64 {
	if x != nil {
		return x.Date
	}
	return 0
}

type Utxo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value     string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Address   []string `protobuf:"bytes,2,rep,name=address,proto3" json:"address,omitempty"`
	IsAddress bool     `protobuf:"varint,3,opt,name=isAddress,proto3" json:"isAddress,omitempty"`
}

func (x *Utxo) Reset() {
	*x = Utxo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tran_v1_api_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Utxo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Utxo) ProtoMessage() {}

func (x *Utxo) ProtoReflect() protoreflect.Message {
	mi := &file_tran_v1_api_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Utxo.ProtoReflect.Descriptor instead.
func (*Utxo) Descriptor() ([]byte, []int) {
	return file_tran_v1_api_proto_rawDescGZIP(), []int{15}
}

func (x *Utxo) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Utxo) GetAddress() []string {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *Utxo) GetIsAddress() bool {
	if x != nil {
		return x.IsAddress
	}
	return false
}

type TxUtxo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash   string  `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	From   []*Utxo `protobuf:"bytes,2,rep,name=from,proto3" json:"from,omitempty"`
	To     []*Utxo `protobuf:"bytes,3,rep,name=to,proto3" json:"to,omitempty"`
	Status bool    `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
	Fee    string  `protobuf:"bytes,9,opt,name=fee,proto3" json:"fee,omitempty"`
	Date   int64   `protobuf:"varint,10,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *TxUtxo) Reset() {
	*x = TxUtxo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tran_v1_api_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxUtxo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxUtxo) ProtoMessage() {}

func (x *TxUtxo) ProtoReflect() protoreflect.Message {
	mi := &file_tran_v1_api_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxUtxo.ProtoReflect.Descriptor instead.
func (*TxUtxo) Descriptor() ([]byte, []int) {
	return file_tran_v1_api_proto_rawDescGZIP(), []int{16}
}

func (x *TxUtxo) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *TxUtxo) GetFrom() []*Utxo {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *TxUtxo) GetTo() []*Utxo {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *TxUtxo) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *TxUtxo) GetFee() string {
	if x != nil {
		return x.Fee
	}
	return ""
}

func (x *TxUtxo) GetDate() int64 {
	if x != nil {
		return x.Date
	}
	return 0
}

type BalanceChanges struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Owner    string `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	CoinType string `protobuf:"bytes,2,opt,name=coinType,proto3" json:"coinType,omitempty"`
	Amount   string `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *BalanceChanges) Reset() {
	*x = BalanceChanges{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tran_v1_api_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BalanceChanges) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalanceChanges) ProtoMessage() {}

func (x *BalanceChanges) ProtoReflect() protoreflect.Message {
	mi := &file_tran_v1_api_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalanceChanges.ProtoReflect.Descriptor instead.
func (*BalanceChanges) Descriptor() ([]byte, []int) {
	return file_tran_v1_api_proto_rawDescGZIP(), []int{17}
}

func (x *BalanceChanges) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *BalanceChanges) GetCoinType() string {
	if x != nil {
		return x.CoinType
	}
	return ""
}

func (x *BalanceChanges) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type TxBalance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash           string            `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	BalanceChanges []*BalanceChanges `protobuf:"bytes,2,rep,name=balanceChanges,proto3" json:"balanceChanges,omitempty"`
}

func (x *TxBalance) Reset() {
	*x = TxBalance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tran_v1_api_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxBalance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxBalance) ProtoMessage() {}

func (x *TxBalance) ProtoReflect() protoreflect.Message {
	mi := &file_tran_v1_api_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxBalance.ProtoReflect.Descriptor instead.
func (*TxBalance) Descriptor() ([]byte, []int) {
	return file_tran_v1_api_proto_rawDescGZIP(), []int{18}
}

func (x *TxBalance) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *TxBalance) GetBalanceChanges() []*BalanceChanges {
	if x != nil {
		return x.BalanceChanges
	}
	return nil
}

type BlockResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash       string       `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Height     int64        `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Txs        []*anypb.Any `protobuf:"bytes,3,rep,name=txs,proto3" json:"txs,omitempty"`
	NextCursor string       `protobuf:"bytes,4,opt,name=nextCursor,proto3" json:"nextCursor,omitempty"`
}

func (x *BlockResult) Reset() {
	*x = BlockResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tran_v1_api_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockResult) ProtoMessage() {}

func (x *BlockResult) ProtoReflect() protoreflect.Message {
	mi := &file_tran_v1_api_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockResult.ProtoReflect.Descriptor instead.
func (*BlockResult) Descriptor() ([]byte, []int) {
	return file_tran_v1_api_proto_rawDescGZIP(), []int{19}
}

func (x *BlockResult) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *BlockResult) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *BlockResult) GetTxs() []*anypb.Any {
	if x != nil {
		return x.Txs
	}
	return nil
}

func (x *BlockResult) GetNextCursor() string {
	if x != nil {
		return x.NextCursor
	}
	return ""
}

type GetBlockHashByHeightReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool         `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Code    string       `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string       `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data    *BlockResult `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetBlockHashByHeightReply) Reset() {
	*x = GetBlockHashByHeightReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tran_v1_api_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlockHashByHeightReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockHashByHeightReply) ProtoMessage() {}

func (x *GetBlockHashByHeightReply) ProtoReflect() protoreflect.Message {
	mi := &file_tran_v1_api_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockHashByHeightReply.ProtoReflect.Descriptor instead.
func (*GetBlockHashByHeightReply) Descriptor() ([]byte, []int) {
	return file_tran_v1_api_proto_rawDescGZIP(), []int{20}
}

func (x *GetBlockHashByHeightReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetBlockHashByHeightReply) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetBlockHashByHeightReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetBlockHashByHeightReply) GetData() *BlockResult {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_tran_v1_api_proto protoreflect.FileDescriptor

var file_tran_v1_api_proto_rawDesc = []byte{
	0x0a, 0x11, 0x74, 0x72, 0x61, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x07, 0x74, 0x72, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x1a, 0x10, 0x62, 0x61,
	0x73, 0x65, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67,
	0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2f, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x30, 0x0a, 0x10, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x6d, 0x0a, 0x0f, 0x43, 0x68, 0x61, 0x69,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a,
	0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x86, 0x01, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x69,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x0f, 0x0a, 0x0d, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x69, 0x0a, 0x0b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x49, 0x0a, 0x18,
	0x49, 0x73, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x53, 0x69, 0x67, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x0d, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x02, 0x52, 0x0d, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x74, 0x0a, 0x16, 0x49, 0x73, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x53, 0x69, 0x67, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x69, 0x0a,
	0x0e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2d, 0x0a, 0x0d, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x02, 0x52,
	0x0d, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x28,
	0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x45, 0x0a, 0x0d, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x69, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x69, 0x67, 0x22,
	0x82, 0x01, 0x0a, 0x0c, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0xc7, 0x01, 0x0a, 0x0f, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x72, 0x61,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x6e, 0x65, 0x6d,
	0x6f, 0x6e, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x6e, 0x65, 0x6d,
	0x6f, 0x6e, 0x69, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x76, 0x4b, 0x65, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x69, 0x76, 0x4b, 0x65, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72,
	0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x74, 0x6f, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0x36,
	0x0a, 0x0e, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x68, 0x61, 0x73, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x84, 0x01, 0x0a, 0x0d, 0x53, 0x65, 0x6e, 0x64, 0x54,
	0x72, 0x61, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x74, 0x72, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x72, 0x61,
	0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x35, 0x0a,
	0x1b, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x42, 0x79, 0x48,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x22, 0xec, 0x01, 0x0a, 0x08, 0x54, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x2a, 0x0a, 0x10, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x10, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x66, 0x65, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x65, 0x22, 0x54, 0x0a, 0x04, 0x55, 0x74, 0x78, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x69,
	0x73, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x69, 0x73, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x9c, 0x01, 0x0a, 0x06, 0x54, 0x78,
	0x55, 0x74, 0x78, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x21, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x74, 0x78, 0x6f, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x1d, 0x0a, 0x02, 0x74,
	0x6f, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x74, 0x78, 0x6f, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x66, 0x65, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x22, 0x5a, 0x0a, 0x0e, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x60, 0x0a, 0x09, 0x54, 0x78, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x3f, 0x0a, 0x0e, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x74, 0x72, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x0e, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x22, 0x81, 0x01, 0x0a, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x26, 0x0a, 0x03, 0x74, 0x78, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x03, 0x74, 0x78, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x65,
	0x78, 0x74, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6e, 0x65, 0x78, 0x74, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x22, 0x8d, 0x01, 0x0a, 0x19, 0x47,
	0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x42, 0x79, 0x48, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x74, 0x72, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0x9d, 0x08, 0x0a, 0x06, 0x54,
	0x72, 0x61, 0x6e, 0x56, 0x31, 0x12, 0x6e, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x19, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61,
	0x69, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e,
	0x74, 0x72, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2d, 0x92, 0x41, 0x08, 0x12, 0x06, 0xe4, 0xbd, 0x99,
	0xe9, 0xa2, 0x9d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x3a, 0x01, 0x2a, 0x22, 0x17, 0x2f, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x2f, 0x7b, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x43, 0x6f, 0x64, 0x65, 0x7d, 0x12, 0x67, 0x0a, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12,
	0x16, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2f, 0x92,
	0x41, 0x08, 0x12, 0x06, 0xe4, 0xbd, 0x99, 0xe9, 0xa2, 0x9d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e,
	0x3a, 0x01, 0x2a, 0x22, 0x19, 0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x67, 0x65, 0x74, 0x4c,
	0x61, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x7e,
	0x0a, 0x11, 0x49, 0x73, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x53, 0x69, 0x67, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x21, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x73,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x53, 0x69, 0x67, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x73, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x53, 0x69, 0x67, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x25, 0x92, 0x41, 0x08, 0x12, 0x06, 0xe4, 0xbd,
	0x99, 0xe9, 0xa2, 0x9d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x3a, 0x01, 0x2a, 0x22, 0x0f, 0x2f,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x69, 0x67, 0x12, 0x62,
	0x0a, 0x07, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x17, 0x2e, 0x74, 0x72, 0x61, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x15, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x27, 0x92, 0x41, 0x08, 0x12, 0x06,
	0xe4, 0xbd, 0x99, 0xe9, 0xa2, 0x9d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x3a, 0x01, 0x2a, 0x22,
	0x11, 0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x67, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x6b, 0x0a, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x12, 0x18,
	0x2e, 0x74, 0x72, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x72, 0x61,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x2d, 0x92, 0x41, 0x0e, 0x12, 0x0c, 0xe5, 0x8f, 0x91, 0xe9, 0x80, 0x81, 0xe4, 0xba, 0xa4,
	0xe6, 0x98, 0x93, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x3a, 0x01, 0x2a, 0x22, 0x11, 0x2f, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x6f, 0x12,
	0xa2, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68,
	0x42, 0x79, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x24, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x42,
	0x79, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22,
	0x2e, 0x74, 0x72, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x48, 0x61, 0x73, 0x68, 0x42, 0x79, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x40, 0x92, 0x41, 0x0e, 0x12, 0x0c, 0xe5, 0x8f, 0x91, 0xe9, 0x80, 0x81, 0xe4,
	0xba, 0xa4, 0xe6, 0x98, 0x93, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x3a, 0x01, 0x2a, 0x22, 0x24,
	0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x67, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48,
	0x61, 0x73, 0x68, 0x42, 0x79, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x2f, 0x7b, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x7d, 0x12, 0x97, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x48, 0x61, 0x73, 0x68, 0x42, 0x79, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x45, 0x74, 0x68,
	0x12, 0x24, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x42, 0x79, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x43, 0x92, 0x41, 0x0e, 0x12, 0x0c,
	0xe5, 0x8f, 0x91, 0xe9, 0x80, 0x81, 0xe4, 0xba, 0xa4, 0xe6, 0x98, 0x93, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x2c, 0x3a, 0x01, 0x2a, 0x22, 0x27, 0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x67, 0x65,
	0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x42, 0x79, 0x48, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x45, 0x74, 0x68, 0x2f, 0x7b, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x7d, 0x12, 0x95,
	0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x42,
	0x79, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x42, 0x74, 0x63, 0x12, 0x24, 0x2e, 0x74, 0x72, 0x61,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73,
	0x68, 0x42, 0x79, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x0f, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x78, 0x55, 0x74, 0x78,
	0x6f, 0x22, 0x43, 0x92, 0x41, 0x0e, 0x12, 0x0c, 0xe5, 0x8f, 0x91, 0xe9, 0x80, 0x81, 0xe4, 0xba,
	0xa4, 0xe6, 0x98, 0x93, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x3a, 0x01, 0x2a, 0x22, 0x27, 0x2f,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x67, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61,
	0x73, 0x68, 0x42, 0x79, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x42, 0x74, 0x63, 0x2f, 0x7b, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x7d, 0x1a, 0x12, 0x92, 0x41, 0x0f, 0x12, 0x0d, 0x62, 0x74, 0x63,
	0x20, 0x41, 0x50, 0x49, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3, 0x42, 0xa4, 0x03, 0x92, 0x41, 0xf4,
	0x02, 0x12, 0x19, 0x0a, 0x12, 0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0xe6, 0x9c, 0x8d, 0xe5, 0x8a,
	0xa1, 0xe6, 0x96, 0x87, 0xe6, 0xa1, 0xa3, 0x32, 0x03, 0x31, 0x2e, 0x30, 0x2a, 0x02, 0x01, 0x02,
	0x32, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73,
	0x6f, 0x6e, 0x32, 0x16, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f,
	0x78, 0x2d, 0x66, 0x6f, 0x6f, 0x2d, 0x6d, 0x69, 0x6d, 0x65, 0x3a, 0x10, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x16, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x78, 0x2d, 0x66, 0x6f, 0x6f, 0x2d,
	0x6d, 0x69, 0x6d, 0x65, 0x52, 0xeb, 0x01, 0x0a, 0x03, 0x35, 0x30, 0x30, 0x12, 0xe3, 0x01, 0x0a,
	0x0c, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x20, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x11, 0x0a,
	0x0f, 0x1a, 0x0d, 0x2e, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x1a, 0xbf, 0x01, 0x0a, 0x10, 0x58, 0x2d, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2d, 0x49, 0x64, 0x12, 0xaa, 0x01, 0x0a, 0x2b, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65,
	0x20, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x20, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x20, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x1a, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x32, 0x26, 0x22, 0x32, 0x34, 0x33, 0x38, 0x61, 0x63, 0x33, 0x63, 0x2d, 0x33,
	0x37, 0x65, 0x62, 0x2d, 0x34, 0x39, 0x30, 0x32, 0x2d, 0x61, 0x64, 0x65, 0x66, 0x2d, 0x65, 0x64,
	0x31, 0x36, 0x62, 0x34, 0x34, 0x33, 0x31, 0x30, 0x33, 0x30, 0x22, 0x6a, 0x45, 0x5e, 0x5b, 0x30,
	0x2d, 0x39, 0x41, 0x2d, 0x46, 0x5d, 0x7b, 0x38, 0x7d, 0x2d, 0x5b, 0x30, 0x2d, 0x39, 0x41, 0x2d,
	0x46, 0x5d, 0x7b, 0x34, 0x7d, 0x2d, 0x34, 0x5b, 0x30, 0x2d, 0x39, 0x41, 0x2d, 0x46, 0x5d, 0x7b,
	0x33, 0x7d, 0x2d, 0x5b, 0x38, 0x39, 0x41, 0x42, 0x5d, 0x5b, 0x30, 0x2d, 0x39, 0x41, 0x2d, 0x46,
	0x5d, 0x7b, 0x33, 0x7d, 0x2d, 0x5b, 0x30, 0x2d, 0x39, 0x41, 0x2d, 0x46, 0x5d, 0x7b, 0x31, 0x32,
	0x7d, 0x24, 0x5a, 0x11, 0x0a, 0x0f, 0x0a, 0x09, 0x42, 0x61, 0x73, 0x69, 0x63, 0x41, 0x75, 0x74,
	0x68, 0x12, 0x02, 0x08, 0x01, 0x5a, 0x2a, 0x67, 0x69, 0x74, 0x2e, 0x67, 0x6b, 0x78, 0x69, 0x2e,
	0x74, 0x6f, 0x70, 0x2f, 0x61, 0x70, 0x6b, 0x2f, 0x61, 0x70, 0x6b, 0x2d, 0x70, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x2f, 0x76, 0x31, 0x3b, 0x76,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tran_v1_api_proto_rawDescOnce sync.Once
	file_tran_v1_api_proto_rawDescData = file_tran_v1_api_proto_rawDesc
)

func file_tran_v1_api_proto_rawDescGZIP() []byte {
	file_tran_v1_api_proto_rawDescOnce.Do(func() {
		file_tran_v1_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_tran_v1_api_proto_rawDescData)
	})
	return file_tran_v1_api_proto_rawDescData
}

var file_tran_v1_api_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_tran_v1_api_proto_goTypes = []interface{}{
	(*ChainListRequest)(nil),            // 0: tran.v1.ChainListRequest
	(*ChainListResult)(nil),             // 1: tran.v1.ChainListResult
	(*ChainListReply)(nil),              // 2: tran.v1.ChainListReply
	(*HeightRequest)(nil),               // 3: tran.v1.HeightRequest
	(*HeightReply)(nil),                 // 4: tran.v1.HeightReply
	(*IsMultiSigAddressRequest)(nil),    // 5: tran.v1.IsMultiSigAddressRequest
	(*IsMultiSigAddressReply)(nil),      // 6: tran.v1.IsMultiSigAddressReply
	(*BalanceRequest)(nil),              // 7: tran.v1.BalanceRequest
	(*BalanceResult)(nil),               // 8: tran.v1.BalanceResult
	(*BalanceReply)(nil),                // 9: tran.v1.BalanceReply
	(*SendTranRequest)(nil),             // 10: tran.v1.SendTranRequest
	(*SendTranResult)(nil),              // 11: tran.v1.SendTranResult
	(*SendTranReply)(nil),               // 12: tran.v1.SendTranReply
	(*GetBlockHashByHeightRequest)(nil), // 13: tran.v1.GetBlockHashByHeightRequest
	(*TxResult)(nil),                    // 14: tran.v1.TxResult
	(*Utxo)(nil),                        // 15: tran.v1.Utxo
	(*TxUtxo)(nil),                      // 16: tran.v1.TxUtxo
	(*BalanceChanges)(nil),              // 17: tran.v1.BalanceChanges
	(*TxBalance)(nil),                   // 18: tran.v1.TxBalance
	(*BlockResult)(nil),                 // 19: tran.v1.BlockResult
	(*GetBlockHashByHeightReply)(nil),   // 20: tran.v1.GetBlockHashByHeightReply
	(*anypb.Any)(nil),                   // 21: google.protobuf.Any
}
var file_tran_v1_api_proto_depIdxs = []int32{
	1,  // 0: tran.v1.ChainListReply.data:type_name -> tran.v1.ChainListResult
	8,  // 1: tran.v1.BalanceReply.data:type_name -> tran.v1.BalanceResult
	11, // 2: tran.v1.SendTranReply.data:type_name -> tran.v1.SendTranResult
	15, // 3: tran.v1.TxUtxo.from:type_name -> tran.v1.Utxo
	15, // 4: tran.v1.TxUtxo.to:type_name -> tran.v1.Utxo
	17, // 5: tran.v1.TxBalance.balanceChanges:type_name -> tran.v1.BalanceChanges
	21, // 6: tran.v1.BlockResult.txs:type_name -> google.protobuf.Any
	19, // 7: tran.v1.GetBlockHashByHeightReply.data:type_name -> tran.v1.BlockResult
	0,  // 8: tran.v1.TranV1.ChainList:input_type -> tran.v1.ChainListRequest
	3,  // 9: tran.v1.TranV1.Height:input_type -> tran.v1.HeightRequest
	5,  // 10: tran.v1.TranV1.IsMultiSigAddress:input_type -> tran.v1.IsMultiSigAddressRequest
	7,  // 11: tran.v1.TranV1.Balance:input_type -> tran.v1.BalanceRequest
	10, // 12: tran.v1.TranV1.SendTran:input_type -> tran.v1.SendTranRequest
	13, // 13: tran.v1.TranV1.GetBlockHashByHeight:input_type -> tran.v1.GetBlockHashByHeightRequest
	13, // 14: tran.v1.TranV1.GetBlockHashByHeightEth:input_type -> tran.v1.GetBlockHashByHeightRequest
	13, // 15: tran.v1.TranV1.GetBlockHashByHeightBtc:input_type -> tran.v1.GetBlockHashByHeightRequest
	2,  // 16: tran.v1.TranV1.ChainList:output_type -> tran.v1.ChainListReply
	4,  // 17: tran.v1.TranV1.Height:output_type -> tran.v1.HeightReply
	6,  // 18: tran.v1.TranV1.IsMultiSigAddress:output_type -> tran.v1.IsMultiSigAddressReply
	9,  // 19: tran.v1.TranV1.Balance:output_type -> tran.v1.BalanceReply
	12, // 20: tran.v1.TranV1.SendTran:output_type -> tran.v1.SendTranReply
	20, // 21: tran.v1.TranV1.GetBlockHashByHeight:output_type -> tran.v1.GetBlockHashByHeightReply
	14, // 22: tran.v1.TranV1.GetBlockHashByHeightEth:output_type -> tran.v1.TxResult
	16, // 23: tran.v1.TranV1.GetBlockHashByHeightBtc:output_type -> tran.v1.TxUtxo
	16, // [16:24] is the sub-list for method output_type
	8,  // [8:16] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_tran_v1_api_proto_init() }
func file_tran_v1_api_proto_init() {
	if File_tran_v1_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tran_v1_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChainListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tran_v1_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChainListResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tran_v1_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChainListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tran_v1_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeightRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tran_v1_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeightReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tran_v1_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsMultiSigAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tran_v1_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsMultiSigAddressReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tran_v1_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BalanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tran_v1_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BalanceResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tran_v1_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BalanceReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tran_v1_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendTranRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tran_v1_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendTranResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tran_v1_api_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendTranReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tran_v1_api_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlockHashByHeightRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tran_v1_api_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tran_v1_api_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Utxo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tran_v1_api_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxUtxo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tran_v1_api_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BalanceChanges); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tran_v1_api_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxBalance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tran_v1_api_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tran_v1_api_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlockHashByHeightReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tran_v1_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tran_v1_api_proto_goTypes,
		DependencyIndexes: file_tran_v1_api_proto_depIdxs,
		MessageInfos:      file_tran_v1_api_proto_msgTypes,
	}.Build()
	File_tran_v1_api_proto = out.File
	file_tran_v1_api_proto_rawDesc = nil
	file_tran_v1_api_proto_goTypes = nil
	file_tran_v1_api_proto_depIdxs = nil
}
